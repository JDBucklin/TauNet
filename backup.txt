 client of the TauNet network
 #it stores a list of possible users to send messages to read in from a local file
 ##class TauNetClient():
 ##    def __init__(self):
 ##        self.name = 'jbucklin'
 ##
 ##    def send_message(self):
 ##        message = raw_input('Enter a message: ')
 ##        c_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
 ##
 ##        #replace this with file search or when client is made it has list available
 ##        HOST = '192.168.1.39'
 ##        PORT = 6283
 ##
 ##        #connect to server and send the message
 ##        #server is expected to close the connection
 ##        c_socket.connect((HOST, PORT))
 ##        c_socket.sendall(message)
 ##        print 'Message sent successfully!\n'
         

tops the server and closes the thread.
    #to accomplish this is must make a connection with itself to finish the accept loop
        def stop_server(self):
	        self.running = False
		        socket.socket(socket.AF_INET, socket.SOCK_STREAM).connect(('192.168.1.39', 6283))

_server = TauNetServer()
##    a_server.start()
##
##    a_client = TauNetClient()
##    again = True
##    while(again != 'n'):
##        a_client.send_message()
##        again = raw_input('again?')
##
##    a_server.stop_server()
##    a_server.join()
##  



